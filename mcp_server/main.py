# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T14:56:53+00:00



import argparse
import json
import os
from typing import *
from typing import Optional, Union

from autogen.mcp.mcp_proxy import MCPProxy
from autogen.mcp.mcp_proxy.security import APIKeyHeader, BaseSecurity

from models import (
    HscerCertificatePostRequest,
    HscerCertificatePostResponse,
    HscerCertificatePostResponse1,
    HscerCertificatePostResponse2,
    HscerCertificatePostResponse3,
    HscerCertificatePostResponse4,
    HscerCertificatePostResponse5,
    HscerCertificatePostResponse6,
    SscerCertificatePostRequest,
    SscerCertificatePostResponse,
    SscerCertificatePostResponse1,
    SscerCertificatePostResponse2,
    SscerCertificatePostResponse3,
    SscerCertificatePostResponse4,
    SscerCertificatePostResponse5,
    SscerCertificatePostResponse6,
)

app = MCPProxy(
    description='Tamilnadu - Government Examinations (https://dgecert.tn.nic.in/) is issuing Mark Certificates through DigiLocker. These can be pulled by students into their DigiLocker accounts. Currently Class X (2016-2019) and XII (2016-2018) marksheets are available.',
    termsOfService='https://apisetu.gov.in/terms.php',
    title='Tamil Nadu State Board (Tamil Nadu Directorate of Government Examinations), Tamil Nadu',
    version='3.0.0',
    servers=[{'url': 'https://apisetu.gov.in/dgecerttn/v3'}],
)


@app.post(
    '/hscer/certificate',
    description=""" API to verify Class XII Marksheet. """,
    tags=['marksheet_management'],
    security=[
        APIKeyHeader(name="X-APISETU-APIKEY"),
        APIKeyHeader(name="X-APISETU-CLIENTID"),
    ],
)
def hscer(body: HscerCertificatePostRequest = None):
    """
    Class XII Marksheet
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


@app.post(
    '/sscer/certificate',
    description=""" API to verify Class X Marksheet. """,
    tags=['marksheet_management'],
    security=[
        APIKeyHeader(name="X-APISETU-APIKEY"),
        APIKeyHeader(name="X-APISETU-CLIENTID"),
    ],
)
def sscer(body: SscerCertificatePostRequest = None):
    """
    Class X Marksheet
    """
    raise RuntimeError("Should be patched by MCPProxy and never executed")


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="MCP Server")
    parser.add_argument(
        "transport",
        choices=["stdio", "sse", "streamable-http"],
        help="Transport mode (stdio, sse or streamable-http)",
    )
    args = parser.parse_args()

    if "CONFIG_PATH" in os.environ:
        config_path = os.environ["CONFIG_PATH"]
        app.load_configuration(config_path)

    if "CONFIG" in os.environ:
        config = os.environ["CONFIG"]
        app.load_configuration_from_string(config)

    if "SECURITY" in os.environ:
        security_params = BaseSecurity.parse_security_parameters_from_env(
            os.environ,
        )

        app.set_security_params(security_params)

    mcp_settings = json.loads(os.environ.get("MCP_SETTINGS", "{}"))

    app.get_mcp(**mcp_settings).run(transport=args.transport)
